{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH } from '../constants/actionTypes';\nimport * as api from '../api';\n\n//ACTIONS CREATORS - are the functions that return the actions \n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    // response has data attribute, destructured it\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    const action = {\n      type: FETCH_ALL,\n      payload: data\n    };\n    dispatch(action);\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPost = id => async dispatch => {};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    const action = {\n      type: CREATE,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    const action = {\n      type: UPDATE,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    console.log('im here');\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    const action = {\n      type: UPDATE,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_ALL","CREATE","UPDATE","DELETE","FETCH_BY_SEARCH","api","getPosts","page","dispatch","type","data","fetchPosts","console","log","action","payload","error","getPostsBySearch","searchQuery","fetchPostsBySearch","getPost","id","createPost","post","updatePost","deletePost","likePost"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/Socialmedia/client/src/actions/posts.js"],"sourcesContent":["import { START_LOADING, END_LOADING,FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH } from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\n\r\n//ACTIONS CREATORS - are the functions that return the actions \r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: START_LOADING});\r\n        // response has data attribute, destructured it\r\n        const { data } = await api.fetchPosts(page)\r\n        console.log(data);\r\n        const action = { type: FETCH_ALL, payload: data }\r\n        dispatch(action);\r\n        dispatch({type: END_LOADING})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\nexport const getPostsBySearch = (searchQuery) => async(dispatch) =>{\r\n    try {\r\n        dispatch({type: START_LOADING})        \r\n        const {data :  {data}} = await api.fetchPostsBySearch(searchQuery);\r\n        console.log(data);\r\n        dispatch({type:  FETCH_BY_SEARCH, payload: data})\r\n        dispatch({type:END_LOADING})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const getPost = (id) => async(dispatch) =>{\r\n\r\n}\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: START_LOADING})\r\n        const { data } = await api.createPost(post)\r\n        const action = {\r\n            type: CREATE,\r\n            payload: data\r\n        }\r\n        dispatch(action);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        const action = {\r\n            type: UPDATE,\r\n            payload: data\r\n        }\r\n        dispatch(action);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        console.log('im here');\r\n        await api.deletePost(id);\r\n        dispatch({\r\n            type: DELETE,\r\n            payload: id\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        const { data } = await api.likePost(id)\r\n        const action = {\r\n            type: UPDATE,\r\n            payload: data\r\n        }\r\n        dispatch(action)\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}