{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\OneDrive\\\\Documents\\\\WEB DEVELOPMENT\\\\Socialmedia\\\\client\\\\src\\\\components\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, Grow } from '@mui/material';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n}\nconst Home = () => {\n  _s();\n  const [currentId, setCurrentId] = useState(null);\n  // define the hooks\n  // [dispatch] means effect only re-run when the dispatch value changes \n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n      console.log(windowDimensions.width);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: windowDimensions.width <= 600 ? 'column-reverse' : 'row',\n        justifyContent: \"space-between\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 7,\n          children: /*#__PURE__*/_jsxDEV(Posts, {\n            setCurrentId: setCurrentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            currentId: currentId,\n            setCurrentId: setCurrentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), windowDimensions.width]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"HKUiveUy7cN2pOnzXW3pHu+tUFo=\", false, function () {\n  return [useDispatch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Grow","Posts","Form","useDispatch","getPosts","jsxDEV","_jsxDEV","getWindowDimensions","innerWidth","width","innerHeight","height","window","Home","_s","currentId","setCurrentId","dispatch","windowDimensions","setWindowDimensions","handleResize","console","log","addEventListener","removeEventListener","in","children","container","direction","justifyContent","alignItems","spacing","item","xs","sm","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/Socialmedia/client/src/components/Home/Home.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Container, Grid, Grow } from '@mui/material';\r\nimport Posts from '../Posts/Posts'\r\nimport Form from '../Form/Form'\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPosts } from '../../actions/posts';\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height,\r\n    };\r\n}\r\nconst Home = () => {\r\n    const [currentId, setCurrentId] = useState(null);\r\n    // define the hooks\r\n    // [dispatch] means effect only re-run when the dispatch value changes \r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(getPosts())\r\n    }, [currentId,dispatch])\r\n    const [windowDimensions, setWindowDimensions] = useState(\r\n        getWindowDimensions()\r\n    );\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n            console.log(windowDimensions.width);\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return (\r\n        <Grow in>\r\n            <Container>\r\n                <Grid container direction={windowDimensions.width <= 600 ? 'column-reverse' : 'row'}\r\n                    justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                    <Grid item xs={12} sm={7} >\r\n                        <Posts setCurrentId={setCurrentId} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n                        {windowDimensions.width}\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Container>\r\n\r\n        </Grow>\r\n    )\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}