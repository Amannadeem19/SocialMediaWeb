{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\OneDrive\\\\Documents\\\\WEB DEVELOPMENT\\\\Socialmedia\\\\client\\\\src\\\\components\\\\PostDetails\\\\CommentSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { commentPost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = _ref => {\n  _s();\n  var _currentUser$result;\n  let {\n    post\n  } = _ref;\n  const currentUser = JSON.parse(localStorage.getItem('profile'));\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState('');\n  const commentRef = useRef();\n  const handleClick = async () => {\n    const finalComment = `${currentUser.result.name}: ${comment}`;\n    const newComments = await dispatch(commentPost(finalComment, post._id));\n    setComments(newComments);\n    setComment('');\n    commentRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  console.log('current post' + post);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentsOuterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.commentsInnerContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"subtitle1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", comment.split(': ')[0], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 32\n          }, this), comment.split(':')[1]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: commentRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$result = currentUser.result) === null || _currentUser$result === void 0 ? void 0 : _currentUser$result.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Write a comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          rows: 4,\n          multiline: true,\n          label: \"Comment\",\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: '10px'\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          disabled: !comment,\n          onClick: handleClick,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"afarON509KqHqTlE8IrvrPLVQBM=\", false, function () {\n  return [useStyles, useDispatch];\n});\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","useStyles","commentPost","jsxDEV","_jsxDEV","CommentSection","_ref","_s","_currentUser$result","post","currentUser","JSON","parse","localStorage","getItem","classes","dispatch","comments","setComments","comment","setComment","commentRef","handleClick","finalComment","result","name","newComments","_id","current","scrollIntoView","behavior","console","log","children","className","commentsOuterContainer","commentsInnerContainer","gutterBottom","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","index","split","ref","style","width","fullWidth","rows","multiline","label","value","onChange","e","target","marginTop","color","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/Socialmedia/client/src/components/PostDetails/CommentSection.jsx"],"sourcesContent":["import React, {useState, useRef} from 'react';\r\nimport {Typography, TextField, Button} from '@mui/material';\r\nimport {useDispatch } from 'react-redux';\r\nimport useStyles from './styles';\r\nimport {commentPost} from '../../actions/posts';\r\n\r\nconst CommentSection = ({post}) => {\r\n    const currentUser = JSON.parse(localStorage.getItem('profile'));\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [comments, setComments] = useState(post?.comments);\r\n    const [comment, setComment] = useState('');\r\n    const commentRef = useRef();\r\n    const handleClick = async () =>{\r\n        const finalComment = `${currentUser.result.name}: ${comment}`;\r\n        const newComments = await dispatch(commentPost(finalComment, post._id))\r\n        setComments(newComments);\r\n        setComment('');\r\n        commentRef.current.scrollIntoView({behavior: 'smooth'})\r\n\r\n    }\r\n    console.log('current post'+ post);\r\n    return(\r\n        <div>\r\n            <div className={classes.commentsOuterContainer}>\r\n                <div className={classes.commentsInnerContainer}>\r\n                    <Typography gutterBottom variant='h6'>Comments</Typography>\r\n                    {/* when the comments for the specific post is done  */}\r\n                    {\r\n                        comments.map((comment, index) => (\r\n                            <Typography key={index} gutterBottom variant='subtitle1'>\r\n                               <strong> {comment.split(': ')[0]} </strong>\r\n                               {comment.split(':')[1]}\r\n                            </Typography>\r\n                        ))\r\n                    }\r\n                    <div ref={commentRef}/>\r\n                </div>\r\n                {currentUser?.result?.name && (\r\n                        <div style={ { width : '400px' }}>\r\n                            <Typography gutterBottom variant='h6'>Write a comment</Typography>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                rows={4}\r\n                                multiline\r\n                                label=\"Comment\"\r\n                                value={comment}\r\n                                onChange={(e)=> setComment(e.target.value)}\r\n                            />\r\n                        <Button style={{ marginTop: '10px'}} color='primary' variant='contained' fullWidth disabled={!comment} onClick={handleClick}>\r\n\r\n                            Comment\r\n                        </Button>\r\n                        </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentSection;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}