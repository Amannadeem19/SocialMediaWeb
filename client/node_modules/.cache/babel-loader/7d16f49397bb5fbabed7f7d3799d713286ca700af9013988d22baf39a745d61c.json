{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n  return req;\n});\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const signin = formData => API.post('/user/signin', formData);\nexport const signup = formData => API.post('/user/signup', formData);\nexport const comment = (comment, post_id) => API.post(`/posts/${post_id}/commentPost`, {\n  comment\n});","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","updatePost","updatedPost","patch","deletePost","delete","likePost","signin","formData","signup","comment","post_id"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/Socialmedia/client/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst API = axios.create({baseURL: 'http://localhost:5000'})\r\n\r\nAPI.interceptors.request.use((req)=>{\r\n    if(localStorage.getItem('profile')){\r\n        req.headers.authorization = `Bearer ${JSON.parse( localStorage.getItem('profile')).token}`\r\n    }\r\n    return req;\r\n})\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\r\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\n\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost)\r\n\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`)\r\n\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`)\r\n\r\nexport const signin=(formData) => API.post('/user/signin', formData);\r\n\r\nexport const signup=(formData) => API.post('/user/signup', formData);\r\n\r\n\r\nexport const comment=(comment, post_id) => API.post(`/posts/${post_id}/commentPost`, {comment});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAACC,OAAO,EAAE;AAAuB,CAAC,CAAC;AAE5DF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAG;EAChC,IAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAC;IAC/BF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAI,UAASC,IAAI,CAACC,KAAK,CAAEL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAM,EAAC;EAC9F;EACA,OAAOP,GAAG;AACd,CAAC,CAAC;AACF,OAAO,MAAMQ,SAAS,GAAIC,EAAE,IAAKf,GAAG,CAACgB,GAAG,CAAE,UAASD,EAAG,EAAC,CAAC;AACxD,OAAO,MAAME,UAAU,GAAIC,IAAI,IAAKlB,GAAG,CAACgB,GAAG,CAAE,eAAcE,IAAK,EAAC,CAAC;AAClE,OAAO,MAAMC,kBAAkB,GAAIC,WAAW,IAAKpB,GAAG,CAACgB,GAAG,CAAE,6BAA4BI,WAAW,CAACC,MAAM,IAAI,MAAO,SAAQD,WAAW,CAACE,IAAK,EAAC,CAAC;AAChJ,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAKxB,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC;AAElE,OAAO,MAAME,UAAU,GAAGA,CAACX,EAAE,EAAEY,WAAW,KAAK3B,GAAG,CAAC4B,KAAK,CAAE,UAASb,EAAG,EAAC,EAAEY,WAAW,CAAC;AAErF,OAAO,MAAME,UAAU,GAAId,EAAE,IAAKf,GAAG,CAAC8B,MAAM,CAAE,UAASf,EAAG,EAAC,CAAC;AAE5D,OAAO,MAAMgB,QAAQ,GAAIhB,EAAE,IAAKf,GAAG,CAAC4B,KAAK,CAAE,UAASb,EAAG,WAAU,CAAC;AAElE,OAAO,MAAMiB,MAAM,GAAEC,QAAQ,IAAKjC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEQ,QAAQ,CAAC;AAEpE,OAAO,MAAMC,MAAM,GAAED,QAAQ,IAAKjC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEQ,QAAQ,CAAC;AAGpE,OAAO,MAAME,OAAO,GAACA,CAACA,OAAO,EAAEC,OAAO,KAAKpC,GAAG,CAACyB,IAAI,CAAE,UAASW,OAAQ,cAAa,EAAE;EAACD;AAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}