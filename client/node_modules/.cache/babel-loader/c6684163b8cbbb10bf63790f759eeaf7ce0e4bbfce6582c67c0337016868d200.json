{"ast":null,"code":"// posts = state \nimport { COMMENTS, START_LOADING, END_LOADING, CREATE, FETCH_ALL, UPDATE, DELETE, FETCH_BY_SEARCH, FETCH_POST } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case COMMENTS:\n      return {\n        ...state,\n        posts: state.posts.map(post => {\n          // change the post that just received a comment ... \n          if (post._id === action.payload._id) {\n            return action.payload;\n          }\n          // return all the other posts manually\n          return post;\n        })\n      };\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action.payload\n      };\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case END_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case CREATE:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case UPDATE:\n      return {\n        ...state,\n        posts: state.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.filter(post => post._id !== action.payload)\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["COMMENTS","START_LOADING","END_LOADING","CREATE","FETCH_ALL","UPDATE","DELETE","FETCH_BY_SEARCH","FETCH_POST","state","arguments","length","undefined","isLoading","posts","action","type","map","post","_id","payload","data","currentPage","numberOfPages","filter"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/Socialmedia/client/src/reducers/posts.js"],"sourcesContent":["// posts = state \r\nimport {COMMENTS,START_LOADING, END_LOADING, CREATE, FETCH_ALL, UPDATE, DELETE, FETCH_BY_SEARCH, FETCH_POST } from '../constants/actionTypes';\r\nexport default (state = {isLoading : true, posts: []}, action) => {\r\n    switch (action.type) {\r\n        case COMMENTS:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post) => {\r\n                    // change the post that just received a comment ... \r\n                    if(post._id === action.payload._id){\r\n                        return action.payload;\r\n                    }\r\n                    // return all the other posts manually\r\n                      return post;  \r\n                })\r\n            };\r\n        case FETCH_POST:\r\n            return {...state, post: action.payload};\r\n        case START_LOADING:\r\n            return {...state, isLoading : true};\r\n        case END_LOADING:\r\n            return {...state, isLoading : false};\r\n        case FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.data,\r\n                currentPage: action.payload.currentPage,\r\n                numberOfPages: action.payload.numberOfPages,\r\n            };\r\n        case FETCH_BY_SEARCH:\r\n            return {...state, posts:  action.payload};\r\n        case CREATE:\r\n            return {...state,  posts: action.payload};\r\n        case UPDATE:\r\n            return {...state, posts: state.map((post) => post._id === action.payload._id ? action.payload : post)}\r\n        case DELETE:\r\n            return {...state, posts: state.filter((post) => post._id !== action.payload)}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"],"mappings":"AAAA;AACA,SAAQA,QAAQ,EAACC,aAAa,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,eAAe,EAAEC,UAAU,QAAQ,0BAA0B;AAC7I,gBAAe,YAAmD;EAAA,IAAlDC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAACG,SAAS,EAAG,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC;EAAA,IAAEC,MAAM,GAAAL,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzD,QAAQG,MAAM,CAACC,IAAI;IACf,KAAKhB,QAAQ;MACT,OAAO;QACH,GAAGS,KAAK;QACRK,KAAK,EAAEL,KAAK,CAACK,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;UAC7B;UACA,IAAGA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACK,OAAO,CAACD,GAAG,EAAC;YAC/B,OAAOJ,MAAM,CAACK,OAAO;UACzB;UACA;UACE,OAAOF,IAAI;QACjB,CAAC;MACL,CAAC;IACL,KAAKV,UAAU;MACX,OAAO;QAAC,GAAGC,KAAK;QAAES,IAAI,EAAEH,MAAM,CAACK;MAAO,CAAC;IAC3C,KAAKnB,aAAa;MACd,OAAO;QAAC,GAAGQ,KAAK;QAAEI,SAAS,EAAG;MAAI,CAAC;IACvC,KAAKX,WAAW;MACZ,OAAO;QAAC,GAAGO,KAAK;QAAEI,SAAS,EAAG;MAAK,CAAC;IACxC,KAAKT,SAAS;MACV,OAAO;QACH,GAAGK,KAAK;QACRK,KAAK,EAAEC,MAAM,CAACK,OAAO,CAACC,IAAI;QAC1BC,WAAW,EAAEP,MAAM,CAACK,OAAO,CAACE,WAAW;QACvCC,aAAa,EAAER,MAAM,CAACK,OAAO,CAACG;MAClC,CAAC;IACL,KAAKhB,eAAe;MAChB,OAAO;QAAC,GAAGE,KAAK;QAAEK,KAAK,EAAGC,MAAM,CAACK;MAAO,CAAC;IAC7C,KAAKjB,MAAM;MACP,OAAO;QAAC,GAAGM,KAAK;QAAGK,KAAK,EAAEC,MAAM,CAACK;MAAO,CAAC;IAC7C,KAAKf,MAAM;MACP,OAAO;QAAC,GAAGI,KAAK;QAAEK,KAAK,EAAEL,KAAK,CAACQ,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACK,OAAO,CAACD,GAAG,GAAGJ,MAAM,CAACK,OAAO,GAAGF,IAAI;MAAC,CAAC;IAC1G,KAAKZ,MAAM;MACP,OAAO;QAAC,GAAGG,KAAK;QAAEK,KAAK,EAAEL,KAAK,CAACe,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACK,OAAO;MAAC,CAAC;IACjF;MACI,OAAOX,KAAK;EAAC;AAGzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}