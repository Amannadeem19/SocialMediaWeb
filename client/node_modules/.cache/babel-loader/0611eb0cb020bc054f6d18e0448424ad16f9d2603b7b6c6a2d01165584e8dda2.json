{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\OneDrive\\\\Documents\\\\WEB DEVELOPMENT\\\\Socialmedia\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileBase from 'react-file-base64';\nimport useStyles from './form-styles.js';\nimport { TextField, Button, Typography, Paper } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { createPost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    // for stop the browser to refresh \n    e.preventDefault();\n    if (currentId) {\n      dispatch(updatePost(postData));\n    }\n    dispatch(createPost(postData));\n  };\n  const clear = () => {};\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({\n          ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained \",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained \",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(Form, \"xp6ff6RSQdMFEaSD7YnqJ35AT88=\", false, function () {\n  return [useStyles, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","FileBase","useStyles","TextField","Button","Typography","Paper","useDispatch","createPost","jsxDEV","_jsxDEV","Form","_ref","_s","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","updatePost","clear","className","paper","children","autoComplete","noValidate","root","form","onSubmit","variant","fileName","_jsxFileName","lineNumber","columnNumber","name","label","fullWidth","value","onChange","target","fileInput","type","multiple","onDone","_ref2","base64","buttonSubmit","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/Socialmedia/client/src/components/Form/Form.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport FileBase from 'react-file-base64'\r\nimport useStyles from './form-styles.js';\r\nimport {TextField, Button, Typography, Paper} from '@mui/material'\r\nimport {useDispatch} from 'react-redux'\r\nimport {createPost} from '../../actions/posts'\r\nconst Form = ({currentId, setCurrentId})=>{\r\n  const [postData, setPostData] = useState({\r\n    creator:'', \r\n    title:'',\r\n    message:'',\r\n    tags:'',\r\n    selectedFile:'',\r\n  })\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e)=>{\r\n \r\n    // for stop the browser to refresh \r\n    e.preventDefault();\r\n    if (currentId) {\r\n      dispatch(updatePost(postData))\r\n    }\r\n    dispatch(createPost(postData))\r\n  }\r\n  const clear = ()=>{\r\n\r\n  }\r\n\r\n    return(\r\n      <Paper className={classes.paper}>\r\n          <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n          <Typography variant='h6'>Creating a Memory</Typography>\r\n          <TextField name='creator'\r\n           variant='outlined' \r\n           label='Creator' \r\n           fullWidth\r\n            value={postData.creator} \r\n            onChange={(e)=> setPostData({...postData ,creator: e.target.value})} \r\n            />\r\n            <TextField name='title'\r\n           variant='outlined' \r\n           label='Title' \r\n           fullWidth\r\n            value={postData.title} \r\n            onChange={(e)=> setPostData({...postData , title: e.target.value})} \r\n            />\r\n            <TextField name='message'\r\n           variant='outlined' \r\n           label='Message' \r\n           fullWidth\r\n            value={postData.message} \r\n            onChange={(e)=> setPostData({...postData ,message: e.target.value})} \r\n            />\r\n            <TextField name='tags'\r\n           variant='outlined' \r\n           label='Tags' \r\n           fullWidth\r\n            value={postData.tags} \r\n            onChange={(e)=> setPostData({...postData ,tags: e.target.value})} \r\n            />\r\n            <div className={classes.fileInput}> \r\n              <FileBase\r\n                type=\"file\"\r\n                multiple = {false}\r\n                onDone = {({base64})=> setPostData({...postData, selectedFile: base64})}\r\n\r\n              />\r\n            </div>\r\n\r\n            <Button className={classes.buttonSubmit} variant='contained ' size=\"large\" type=\"submit\" fullWidth >Post</Button>\r\n            <Button variant='contained '  size=\"small\" onClick={clear} fullWidth >Clear</Button>\r\n\r\n          </form>\r\n      </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}